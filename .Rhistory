distance_aghy<-data.frame(garden,mhd_aghy)
distance_aghy
plot(mhd_aghy ~ longitude, data=distance_aghy)
env_varsL_aghy <- ntbox::correlation_finder(cor(aghy_etrain, method = "spearman"),threshold = 0.70,verbose = F)
env_vars_aghy <- env_varsL_aghy$descriptors
print(env_vars_aghy )
#Now we specify the number of variables to fit the ellipsoid models; in the example, we will fit for 3,5, and 6 dimensions
nvarstest <- c(3,4)
## This parameter is to specify the proportion of training points that will be used to fit the minimum volume ellipsoid (Van Aelst and Rousseeuw 2009).
# Level
level <- 0.99
# This background data is just to compute the partial ROC test
env_bg <- ntbox::sample_envbg(US_land_clim_stack,10000)
## For selecting the model we will use an arbitrary value of 6 percent of omission; it is not a rule but accepted omission rates are those bellow 10%. We will ask the function to return the partial ROC value (Peterson, Papes, and Soberon 2008)
omr_criteria <- 0.05
proc <- TRUE
# Now we just need to use the function ellipsoid_selection to run the model calibration and selection protocol
e_select_aghy <- ntbox::ellipsoid_selection(env_train = aghy_etrain,
env_test = aghy_etest,
env_vars = env_vars_aghy,
level = level,
nvarstest = nvarstest,
env_bg = env_bg,
omr_criteria= omr_criteria,
proc = proc)
# Let’s see the first 20 rows of the results
head(e_select_aghy,10)
# With the following lines of code, I am going to display the model in the first row of the table
# Best ellipsoid model for "omr_criteria"
bestvarcomb_aghy <- stringr::str_split(e_select_aghy$fitted_vars,",")[[1]]
# Ellipsoid model (environmental space)
best_mod_aghy <- ntbox::cov_center(aghy_etrain[,bestvarcomb_aghy],
mve = T,
level = 0.99,
vars = 1:length(bestvarcomb_aghy))
# Projection model in geographic space
#install.packages("rgl",dependencies = TRUE)
library("RColorBrewer")
mProj <- ntbox::ellipsoidfit(US_land_clim_stack[[bestvarcomb_aghy]],
centroid = best_mod_aghy$centroid,
covar = best_mod_aghy$covariance,
level = 0.99,size = 3)
raster::plot(mProj$suitRaster)
points(aghy[,c("lon","lat")],pch=20,cex=0.1)
garden_clim<- raster::extract(US_land_clim_stack,garden[,c("longitude","latitude")], df=TRUE)
garden_clim <- garden_clim[,-1]
mhd_aghy <- stats::mahalanobis(garden_clim[,bestvarcomb_aghy],center = best_mod_aghy$centroid,cov = best_mod_aghy$covariance)
distance_aghy
plot(mhd_aghy ~ longitude, data=distance_aghy)
# Model calibration selection using Minimum Volume Ellipsoids (MVEs).
# Random sample indexes
train_index_aghy <- sample(1:nrow(aghy), 0.75 * nrow(aghy))
test_index_aghy <- setdiff(1:nrow(aghy), train_index_aghy)
# # Split occurences in train and test
aghy_train <- aghy[train_index_aghy, ]
aghy_test <- aghy[test_index_aghy, ]
# Extracts the environmental information for both train and test data
aghy_etrain <- raster::extract(US_land_clim_stack,aghy_train[,c("lon", "lat")],df=TRUE)
aghy_etrain<-na.omit(aghy_etrain)
aghy_etrain <- aghy_etrain[,-1]
head(aghy_etrain)
aghy_etest <- raster::extract(US_land_clim_stack,aghy_test[,c("lon","lat")], df=TRUE)
aghy_etest<-na.omit(aghy_etest)
aghy_etest <- aghy_etest[,-1]
head(aghy_etest)
env_varsL_aghy <- ntbox::correlation_finder(cor(aghy_etrain, method = "spearman"),threshold = 0.70,verbose = F)
env_vars_aghy <- env_varsL_aghy$descriptors
print(env_vars_aghy )
#Now we specify the number of variables to fit the ellipsoid models; in the example, we will fit for 3,5, and 6 dimensions
nvarstest <- c(3,4)
## This parameter is to specify the proportion of training points that will be used to fit the minimum volume ellipsoid (Van Aelst and Rousseeuw 2009).
# Level
level <- 0.99
# This background data is just to compute the partial ROC test
env_bg <- ntbox::sample_envbg(US_land_clim_stack,10000)
## For selecting the model we will use an arbitrary value of 6 percent of omission; it is not a rule but accepted omission rates are those bellow 10%. We will ask the function to return the partial ROC value (Peterson, Papes, and Soberon 2008)
omr_criteria <- 0.05
proc <- TRUE
# Now we just need to use the function ellipsoid_selection to run the model calibration and selection protocol
e_select_aghy <- ntbox::ellipsoid_selection(env_train = aghy_etrain,
env_test = aghy_etest,
env_vars = env_vars_aghy,
level = level,
nvarstest = nvarstest,
env_bg = env_bg,
omr_criteria= omr_criteria,
proc = proc)
# Let’s see the first 20 rows of the results
head(e_select_aghy,10)
# With the following lines of code, I am going to display the model in the first row of the table
# Best ellipsoid model for "omr_criteria"
bestvarcomb_aghy <- stringr::str_split(e_select_aghy$fitted_vars,",")[[1]]
# Ellipsoid model (environmental space)
best_mod_aghy <- ntbox::cov_center(aghy_etrain[,bestvarcomb_aghy],
mve = T,
level = 0.99,
vars = 1:length(bestvarcomb_aghy))
mProj <- ntbox::ellipsoidfit(US_land_clim_stack[[bestvarcomb_aghy]],
centroid = best_mod_aghy$centroid,
covar = best_mod_aghy$covariance,
level = 0.99,size = 3)
raster::plot(mProj$suitRaster)
points(aghy[,c("lon","lat")],pch=20,cex=0.1)
plot(mhd_aghy ~ longitude, data=distance_aghy)
cor.test(distance_aghy$longitude,distance_aghy$mhd_aghy)
env_varsL_aghy <- ntbox::correlation_finder(cor(aghy_etrain, method = "spearman"),threshold = 0.75,verbose = F)
env_vars_aghy <- env_varsL_aghy$descriptors
print(env_vars_aghy )
#Now we specify the number of variables to fit the ellipsoid models; in the example, we will fit for 3,5, and 6 dimensions
nvarstest <- c(3,4,5)
## This parameter is to specify the proportion of training points that will be used to fit the minimum volume ellipsoid (Van Aelst and Rousseeuw 2009).
# Level
level <- 0.99
# This background data is just to compute the partial ROC test
env_bg <- ntbox::sample_envbg(US_land_clim_stack,10000)
## For selecting the model we will use an arbitrary value of 6 percent of omission; it is not a rule but accepted omission rates are those bellow 10%. We will ask the function to return the partial ROC value (Peterson, Papes, and Soberon 2008)
omr_criteria <- 0.06
proc <- TRUE
# Now we just need to use the function ellipsoid_selection to run the model calibration and selection protocol
e_select_aghy <- ntbox::ellipsoid_selection(env_train = aghy_etrain,
env_test = aghy_etest,
env_vars = env_vars_aghy,
level = level,
nvarstest = nvarstest,
env_bg = env_bg,
omr_criteria= omr_criteria,
proc = proc)
# Let’s see the first 20 rows of the results
head(e_select_aghy,10)
# With the following lines of code, I am going to display the model in the first row of the table
# Best ellipsoid model for "omr_criteria"
bestvarcomb_aghy <- stringr::str_split(e_select_aghy$fitted_vars,",")[[1]]
# Ellipsoid model (environmental space)
best_mod_aghy <- ntbox::cov_center(aghy_etrain[,bestvarcomb_aghy],
mve = T,
level = 0.99,
vars = 1:length(bestvarcomb_aghy))
# Projection model in geographic space
#install.packages("rgl",dependencies = TRUE)
library("RColorBrewer")
mProj <- ntbox::ellipsoidfit(US_land_clim_stack[[bestvarcomb_aghy]],
centroid = best_mod_aghy$centroid,
covar = best_mod_aghy$covariance,
level = 0.99,size = 3)
raster::plot(mProj$suitRaster)
points(aghy[,c("lon","lat")],pch=20,cex=0.1)
garden_clim <- garden_clim[,-1]
mhd_aghy <- stats::mahalanobis(garden_clim[,bestvarcomb_aghy],center = best_mod_aghy$centroid,cov = best_mod_aghy$covariance)
garden_clim<- raster::extract(US_land_clim_stack,garden[,c("longitude","latitude")], df=TRUE)
garden_clim <- garden_clim[,-1]
mhd_aghy <- stats::mahalanobis(garden_clim[,bestvarcomb_aghy],center = best_mod_aghy$centroid,cov = best_mod_aghy$covariance)
distance_aghy<-data.frame(garden,mhd_aghy)
distance_aghy
plot(mhd_aghy ~ longitude, data=distance_aghy)
cor.test(distance_aghy$longitude,distance_aghy$mhd_aghy)
# Elymus virginicus---
#elvi_occ_raw <- gbif(genus="Elymus",species="virginicus",download=TRUE)
#saveRDS(elvi_occ_raw, file = "/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/ELVI Model output/occurence/elvi_occ_raw.rds")
elvi_occ_raw<-readRDS(url("https://www.dropbox.com/scl/fi/0ssa5gepxyz28b7ykw1x8/elvi_occ_raw.rds?rlkey=4dx0q4lw2112droh73hmh7xte&dl=1"))
elvi_occ_raw %>%
filter(!is.na(lat) & !is.na(lon) & !is.na(year)  & country=="United States") %>%
unique() %>%
dplyr::select(country,lon, lat,year)%>%
arrange(lat)->elvi
plot(US_land)
points(elvi[,c("lon","lat")],pch=20,cex=0.1)
# Model calibration selection using Minimum Volume Ellipsoids (MVEs).
# Random sample indexes
train_index_elvi <- sample(1:nrow(elvi), 0.75 * nrow(elvi))
test_index_elvi <- setdiff(1:nrow(elvi), train_index_elvi)
# # Split occurences in train and test
elvi_train <- elvi[train_index_elvi, ]
elvi_test <- elvi[test_index_elvi, ]
# Extracts the environmental information for both train and test data
elvi_etrain <- raster::extract(US_land_clim_stack,elvi_train[,c("lon", "lat")],df=TRUE)
elvi_etrain<-na.omit(elvi_etrain)
elvi_etrain <- elvi_etrain[,-1]
head(elvi_etrain)
elvi_etest <- raster::extract(US_land_clim_stack,elvi_test[,c("lon","lat")], df=TRUE)
elvi_etest<-na.omit(elvi_etest)
elvi_etest <- elvi_etest[,-1]
head(elvi_etest)
env_varsL_elvi <- ntbox::correlation_finder(cor(elvi_etrain, method = "spearman"),threshold = 0.75,verbose = F)
env_vars_elvi <- env_varsL_elvi$descriptors
print(env_vars_elvi )
#Now we specify the number of variables to fit the ellipsoid models; in the example, we will fit for 3,5, and 6 dimensions
nvarstest <- c(3,4,5)
## This parameter is to specify the proportion of training points that will be used to fit the minimum volume ellipsoid (Van Aelst and Rousseeuw 2009).
# Level
level <- 0.99
# This background data is just to compute the partial ROC test
env_bg <- ntbox::sample_envbg(US_land_clim_stack,10000)
## For selecting the model we will use an arbitrary value of 6 percent of omission; it is not a rule but accepted omission rates are those bellow 10%. We will ask the function to return the partial ROC value (Peterson, Papes, and Soberon 2008)
omr_criteria <- 0.06
proc <- TRUE
# Now we just need to use the function ellipsoid_selection to run the model calibration and selection protocol
e_select_elvi <- ntbox::ellipsoid_selection(env_train = elvi_etrain,
env_test = elvi_etest,
env_vars = env_vars_elvi,
level = level,
nvarstest = nvarstest,
env_bg = env_bg,
omr_criteria= omr_criteria,
proc = proc)
# Let’s see the first 20 rows of the results
head(e_select_elvi,20)
# With the following lines of code, I am going to display the model in the first row of the table
# Best ellipsoid model for "omr_criteria"
bestvarcomb_elvi <- stringr::str_split(e_select_elvi$fitted_vars,",")[[1]]
# Ellipsoid model (environmental space)
best_mod_elvi <- ntbox::cov_center(elvi_etrain[,bestvarcomb_elvi],
mve = T,
level = 0.99,
vars = 1:length(bestvarcomb_elvi))
# Projection model in geographic space
#install.packages("rgl",dependencies = TRUE)
library("RColorBrewer")
mProj <- ntbox::ellipsoidfit(US_land_clim_stack[[bestvarcomb_elvi]],
centroid = best_mod_elvi$centroid,
covar = best_mod_elvi$covariance,
level = 0.99,size = 3)
mProj <- ntbox::ellipsoidfit(US_land_clim_stack[[bestvarcomb_elvi]],
centroid = best_mod_elvi$centroid,
covar = best_mod_elvi$covariance,
level = 0.99,size = 3)
raster::plot(mProj$suitRaster)
garden_clim<- raster::extract(US_land_clim_stack,garden[,c("longitude","latitude")], df=TRUE)
garden_clim <- garden_clim[,-1]
mhd_elvi <- stats::mahalanobis(garden_clim[,bestvarcomb_elvi],center = best_mod_elvi$centroid,cov = best_mod_elvi$covariance)
distance_elvi<-data.frame(garden,mhd_elvi)
distance_elvi
plot(mhd_elvi ~ longitude, data=distance_elvi)
distance_aghy
# Model calibration selection using Minimum Volume Ellipsoids (MVEs).
# Random sample indexes
train_index_elvi <- sample(1:nrow(elvi), 0.80 * nrow(elvi))
test_index_elvi <- setdiff(1:nrow(elvi), train_index_elvi)
# # Split occurences in train and test
elvi_train <- elvi[train_index_elvi, ]
elvi_test <- elvi[test_index_elvi, ]
# Extracts the environmental information for both train and test data
elvi_etrain <- raster::extract(US_land_clim_stack,elvi_train[,c("lon", "lat")],df=TRUE)
elvi_etrain<-na.omit(elvi_etrain)
elvi_etrain <- elvi_etrain[,-1]
head(elvi_etrain)
elvi_etest <- raster::extract(US_land_clim_stack,elvi_test[,c("lon","lat")], df=TRUE)
elvi_etest<-na.omit(elvi_etest)
elvi_etest <- elvi_etest[,-1]
head(elvi_etest)
env_varsL_elvi <- ntbox::correlation_finder(cor(elvi_etrain, method = "spearman"),threshold = 0.75,verbose = F)
env_vars_elvi <- env_varsL_elvi$descriptors
print(env_vars_elvi )
#Now we specify the number of variables to fit the ellipsoid models; in the example, we will fit for 3,5, and 6 dimensions
nvarstest <- c(3,4,5)
## This parameter is to specify the proportion of training points that will be used to fit the minimum volume ellipsoid (Van Aelst and Rousseeuw 2009).
# Level
level <- 0.99
# This background data is just to compute the partial ROC test
env_bg <- ntbox::sample_envbg(US_land_clim_stack,10000)
## For selecting the model we will use an arbitrary value of 6 percent of omission; it is not a rule but accepted omission rates are those bellow 10%. We will ask the function to return the partial ROC value (Peterson, Papes, and Soberon 2008)
omr_criteria <- 0.06
proc <- TRUE
# Now we just need to use the function ellipsoid_selection to run the model calibration and selection protocol
e_select_elvi <- ntbox::ellipsoid_selection(env_train = elvi_etrain,
env_test = elvi_etest,
env_vars = env_vars_elvi,
level = level,
nvarstest = nvarstest,
env_bg = env_bg,
omr_criteria= omr_criteria,
proc = proc)
# Let’s see the first 20 rows of the results
head(e_select_elvi,20)
# With the following lines of code, I am going to display the model in the first row of the table
# Best ellipsoid model for "omr_criteria"
bestvarcomb_elvi <- stringr::str_split(e_select_elvi$fitted_vars,",")[[1]]
# Ellipsoid model (environmental space)
best_mod_elvi <- ntbox::cov_center(elvi_etrain[,bestvarcomb_elvi],
mve = T,
level = 0.99,
vars = 1:length(bestvarcomb_elvi))
mProj <- ntbox::ellipsoidfit(US_land_clim_stack[[bestvarcomb_elvi]],
centroid = best_mod_elvi$centroid,
covar = best_mod_elvi$covariance,
level = 0.99,size = 3)
raster::plot(mProj$suitRaster)
points(elvi[,c("lon","lat")],pch=20,cex=0.1)
# mahalanobis distance
read.csv("https://www.dropbox.com/scl/fi/1eu5lhkg5mx7roj3zd7g0/Study_site.csv?rlkey=tonb6sswc7zqf123ct06t64yp&dl=1", stringsAsFactors = F) %>%
unique() %>%
arrange(latitude)->garden ## common garden populations
garden_clim<- raster::extract(US_land_clim_stack,garden[,c("longitude","latitude")], df=TRUE)
garden_clim <- garden_clim[,-1]
mhd_elvi <- stats::mahalanobis(garden_clim[,bestvarcomb_elvi],center = best_mod_elvi$centroid,cov = best_mod_elvi$covariance)
distance_elvi<-data.frame(garden,mhd_elvi)
distance_elvi
plot(mhd_elvi ~ longitude, data=distance_elvi)
#Now we specify the number of variables to fit the ellipsoid models; in the example, we will fit for 3,5, and 6 dimensions
nvarstest <- c(3,4)
## This parameter is to specify the proportion of training points that will be used to fit the minimum volume ellipsoid (Van Aelst and Rousseeuw 2009).
# Level
level <- 0.99
# This background data is just to compute the partial ROC test
env_bg <- ntbox::sample_envbg(US_land_clim_stack,10000)
## For selecting the model we will use an arbitrary value of 6 percent of omission; it is not a rule but accepted omission rates are those bellow 10%. We will ask the function to return the partial ROC value (Peterson, Papes, and Soberon 2008)
omr_criteria <- 0.06
proc <- TRUE
# Now we just need to use the function ellipsoid_selection to run the model calibration and selection protocol
e_select_elvi <- ntbox::ellipsoid_selection(env_train = elvi_etrain,
env_test = elvi_etest,
env_vars = env_vars_elvi,
level = level,
nvarstest = nvarstest,
env_bg = env_bg,
omr_criteria= omr_criteria,
proc = proc)
# Let’s see the first 20 rows of the results
head(e_select_elvi,20)
# With the following lines of code, I am going to display the model in the first row of the table
# Best ellipsoid model for "omr_criteria"
bestvarcomb_elvi <- stringr::str_split(e_select_elvi$fitted_vars,",")[[1]]
# Ellipsoid model (environmental space)
best_mod_elvi <- ntbox::cov_center(elvi_etrain[,bestvarcomb_elvi],
mve = T,
level = 0.99,
vars = 1:length(bestvarcomb_elvi))
mProj <- ntbox::ellipsoidfit(US_land_clim_stack[[bestvarcomb_elvi]],
centroid = best_mod_elvi$centroid,
covar = best_mod_elvi$covariance,
level = 0.99,size = 3)
raster::plot(mProj$suitRaster)
points(elvi[,c("lon","lat")],pch=20,cex=0.1)
# mahalanobis distance
read.csv("https://www.dropbox.com/scl/fi/1eu5lhkg5mx7roj3zd7g0/Study_site.csv?rlkey=tonb6sswc7zqf123ct06t64yp&dl=1", stringsAsFactors = F) %>%
unique() %>%
arrange(latitude)->garden ## common garden populations
garden_clim<- raster::extract(US_land_clim_stack,garden[,c("longitude","latitude")], df=TRUE)
garden_clim <- garden_clim[,-1]
mhd_elvi <- stats::mahalanobis(garden_clim[,bestvarcomb_elvi],center = best_mod_elvi$centroid,cov = best_mod_elvi$covariance)
distance_elvi<-data.frame(garden,mhd_elvi)
distance_elvi
plot(mhd_elvi ~ longitude, data=distance_elvi)
cor.test(distance_elvi$longitude,distance_elvi$mhd_elvi)
#Now we specify the number of variables to fit the ellipsoid models; in the example, we will fit for 3,5, and 6 dimensions
nvarstest <- c(3,4,5)
env_varsL_elvi <- ntbox::correlation_finder(cor(elvi_etrain, method = "spearman"),threshold = 0.70,verbose = F)
env_vars_elvi <- env_varsL_elvi$descriptors
print(env_vars_elvi )
#Now we specify the number of variables to fit the ellipsoid models; in the example, we will fit for 3,5, and 6 dimensions
nvarstest <- c(3,4,5)
## This parameter is to specify the proportion of training points that will be used to fit the minimum volume ellipsoid (Van Aelst and Rousseeuw 2009).
# Level
level <- 0.99
# This background data is just to compute the partial ROC test
env_bg <- ntbox::sample_envbg(US_land_clim_stack,10000)
#Now we specify the number of variables to fit the ellipsoid models; in the example, we will fit for 3,5, and 6 dimensions
nvarstest <- c(3,4)
## This parameter is to specify the proportion of training points that will be used to fit the minimum volume ellipsoid (Van Aelst and Rousseeuw 2009).
# Level
level <- 0.99
# This background data is just to compute the partial ROC test
env_bg <- ntbox::sample_envbg(US_land_clim_stack,10000)
## For selecting the model we will use an arbitrary value of 6 percent of omission; it is not a rule but accepted omission rates are those bellow 10%. We will ask the function to return the partial ROC value (Peterson, Papes, and Soberon 2008)
omr_criteria <- 0.06
proc <- TRUE
# Now we just need to use the function ellipsoid_selection to run the model calibration and selection protocol
e_select_elvi <- ntbox::ellipsoid_selection(env_train = elvi_etrain,
env_test = elvi_etest,
env_vars = env_vars_elvi,
level = level,
nvarstest = nvarstest,
env_bg = env_bg,
omr_criteria= omr_criteria,
proc = proc)
# Let’s see the first 20 rows of the results
head(e_select_elvi,20)
# With the following lines of code, I am going to display the model in the first row of the table
# Best ellipsoid model for "omr_criteria"
bestvarcomb_elvi <- stringr::str_split(e_select_elvi$fitted_vars,",")[[1]]
# Ellipsoid model (environmental space)
best_mod_elvi <- ntbox::cov_center(elvi_etrain[,bestvarcomb_elvi],
mve = T,
level = 0.99,
vars = 1:length(bestvarcomb_elvi))
mProj <- ntbox::ellipsoidfit(US_land_clim_stack[[bestvarcomb_elvi]],
centroid = best_mod_elvi$centroid,
covar = best_mod_elvi$covariance,
level = 0.99,size = 3)
raster::plot(mProj$suitRaster)
points(elvi[,c("lon","lat")],pch=20,cex=0.1)
garden_clim<- raster::extract(US_land_clim_stack,garden[,c("longitude","latitude")], df=TRUE)
garden_clim <- garden_clim[,-1]
mhd_elvi <- stats::mahalanobis(garden_clim[,bestvarcomb_elvi],center = best_mod_elvi$centroid,cov = best_mod_elvi$covariance)
distance_elvi<-data.frame(garden,mhd_elvi)
distance_elvi
plot(mhd_elvi ~ longitude, data=distance_elvi)
env_varsL_elvi <- ntbox::correlation_finder(cor(elvi_etrain, method = "spearman"),threshold = 0.75,verbose = F)
env_vars_elvi <- env_varsL_elvi$descriptors
print(env_vars_elvi )
#Now we specify the number of variables to fit the ellipsoid models; in the example, we will fit for 3,5, and 6 dimensions
nvarstest <- c(3,4,5)
## This parameter is to specify the proportion of training points that will be used to fit the minimum volume ellipsoid (Van Aelst and Rousseeuw 2009).
# Level
level <- 0.99
# This background data is just to compute the partial ROC test
env_bg <- ntbox::sample_envbg(US_land_clim_stack,10000)
## For selecting the model we will use an arbitrary value of 6 percent of omission; it is not a rule but accepted omission rates are those bellow 10%. We will ask the function to return the partial ROC value (Peterson, Papes, and Soberon 2008)
omr_criteria <- 0.06
proc <- TRUE
# Now we just need to use the function ellipsoid_selection to run the model calibration and selection protocol
e_select_elvi <- ntbox::ellipsoid_selection(env_train = elvi_etrain,
env_test = elvi_etest,
env_vars = env_vars_elvi,
level = level,
nvarstest = nvarstest,
env_bg = env_bg,
omr_criteria= omr_criteria,
proc = proc)
# Let’s see the first 20 rows of the results
head(e_select_elvi,20)
# With the following lines of code, I am going to display the model in the first row of the table
# Best ellipsoid model for "omr_criteria"
bestvarcomb_elvi <- stringr::str_split(e_select_elvi$fitted_vars,",")[[1]]
# Ellipsoid model (environmental space)
best_mod_elvi <- ntbox::cov_center(elvi_etrain[,bestvarcomb_elvi],
mve = T,
level = 0.99,
vars = 1:length(bestvarcomb_elvi))
mProj <- ntbox::ellipsoidfit(US_land_clim_stack[[bestvarcomb_elvi]],
centroid = best_mod_elvi$centroid,
covar = best_mod_elvi$covariance,
level = 0.99,size = 3)
garden_clim<- raster::extract(US_land_clim_stack,garden[,c("longitude","latitude")], df=TRUE)
garden_clim <- garden_clim[,-1]
mhd_elvi <- stats::mahalanobis(garden_clim[,bestvarcomb_elvi],center = best_mod_elvi$centroid,cov = best_mod_elvi$covariance)
distance_elvi<-data.frame(garden,mhd_elvi)
distance_elvi
plot(mhd_elvi ~ longitude, data=distance_elvi)
cor.test(distance_elvi$longitude,distance_elvi$mhd_elvi)
# Poa autumnalis---
#poa_occ_raw <- gbif(genus="Poa",species="autumnalis",download=TRUE)
#saveRDS(poa_occ_raw, file = "/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/ELVI Model output/occurence/poa_occ_raw.rds")
poa_occ_raw<-readRDS(url("https://www.dropbox.com/scl/fi/oip7ndyf0d99rqxcqxb0q/poa_occ_raw.rds?rlkey=920uql1gd4gahnh8utw9fz96l&dl=1"))
plot(US_land)
points(poa[,c("lon","lat")],pch=20,cex=0.1)
poa_occ_raw %>%
filter(!is.na(lat) & !is.na(lon) & !is.na(year)  & country=="United States") %>%
unique() %>%
dplyr::select(country,lon, lat,year)%>%
arrange(lat)->poa
plot(US_land)
points(poa[,c("lon","lat")],pch=20,cex=0.1)
poa
# Model calibration selection using Minimum Volume Ellipsoids (MVEs).
# Random sample indexes
train_index_poa <- sample(1:nrow(poa), 0.75 * nrow(poa))
test_index_poa <- setdiff(1:nrow(poa), train_index_poa)
# # Split occurences in train and test
poa_train <- poa[train_index_poa, ]
poa_test <- poa[test_index_poa, ]
# Extracts the environmental information for both train and test data
poa_etrain <- raster::extract(US_land_clim_stack,poa_train[,c("lon", "lat")],df=TRUE)
poa_etrain<-na.omit(poa_etrain)
poa_etrain <- poa_etrain[,-1]
head(poa_etrain)
poa_etest <- raster::extract(US_land_clim_stack,poa_test[,c("lon","lat")], df=TRUE)
poa_etest<-na.omit(poa_etest)
poa_etest <- poa_etest[,-1]
head(poa_etest)
env_varsL_poa <- ntbox::correlation_finder(cor(poa_etrain, method = "spearman"),threshold = 0.75,verbose = F)
env_vars_poa <- env_varsL_poa$descriptors
print(env_vars_poa )
#Now we specify the number of variables to fit the ellipsoid models; in the example, we will fit for 3,5, and 6 dimensions
nvarstest <- c(3,4,5)
## This parameter is to specify the proportion of training points that will be used to fit the minimum volume ellipsoid (Van Aelst and Rousseeuw 2009).
# Level
level <- 0.99
# This background data is just to compute the partial ROC test
env_bg <- ntbox::sample_envbg(US_land_clim_stack,10000)
## For selecting the model we will use an arbitrary value of 6 percent of omission; it is not a rule but accepted omission rates are those bellow 10%. We will ask the function to return the partial ROC value (Peterson, Papes, and Soberon 2008)
omr_criteria <- 0.06
proc <- TRUE
# Now we just need to use the function ellipsoid_selection to run the model calibration and selection protocol
e_select_poa <- ntbox::ellipsoid_selection(env_train = poa_etrain,
env_test = poa_etest,
env_vars = env_vars_poa,
level = level,
nvarstest = nvarstest,
env_bg = env_bg,
omr_criteria= omr_criteria,
proc = proc)
# Let’s see the first 20 rows of the results
head(e_select_poa,20)
# With the following lines of code, I am going to display the model in the first row of the table
# Best ellipsoid model for "omr_criteria"
bestvarcomb_poa <- stringr::str_split(e_select_poa$fitted_vars,",")[[1]]
# Ellipsoid model (environmental space)
best_mod_poa <- ntbox::cov_center(poa_etrain[,bestvarcomb_poa],
mve = T,
level = 0.99,
vars = 1:length(bestvarcomb_poa))
mProj <- ntbox::ellipsoidfit(US_land_clim_stack[[bestvarcomb_poa]],
centroid = best_mod_poa$centroid,
covar = best_mod_poa$covariance,
level = 0.99,size = 3)
raster::plot(mProj$suitRaster)
points(poa[,c("lon","lat")],pch=20,cex=0.1)
mhd_poa <- stats::mahalanobis(garden_clim[,bestvarcomb_poa],center = best_mod_poa$centroid,cov = best_mod_poa$covariance)
mhd_poa
distance_poa<-data.frame(garden,mhd_poa)
distance_poa
plot(mhd_poa ~ longitude, data=distance_poa)
